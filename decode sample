void decode_person(const char *encoded_data, struct Person *person) {
    printf("Encoded data: %s\n", encoded_data); // Debug: Print encoded data

    // Ensure encoded data is not empty
    if (strlen(encoded_data) < 1) {
        printf("Error: Invalid encoded data\n");
        return;
    }

    // Decode name length
    int name_length = encoded_data[0];
    printf("Name length: %d\n", name_length); // Debug: Print name length

    // Ensure name length does not exceed encoded data length
    if (name_length + 1 >= strlen(encoded_data)) {
        printf("Error: Invalid name length\n");
        return;
    }

    // Decode name
    memcpy(person->name, &encoded_data[1], name_length);
    person->name[name_length] = '\0'; // Null-terminate the string
    printf("Decoded name: %s\n", person->name); // Debug: Print decoded name

    // Decode age
    int age_offset = name_length + 1;
    if (age_offset + sizeof(int) <= strlen(encoded_data)) {
        memcpy(&person->age, &encoded_data[age_offset], sizeof(int));
    } else {
        printf("Error: Invalid age length\n");
        return;
    }
    printf("Decoded age: %d\n", person->age); // Debug: Print decoded age
}